---
#Probe pv partitions to detect size changes
- name: "Probe partitions"
  community.general.parted:
    device: "{{ item.1 }}"
    unit: GB
  with_subelements:
    - "{{ lvm_vgs }}"
    - pvs
  loop_control:
    label: "{{ item.1 }}"
  become: True

#Create volume group
- name: "Ensure Logical Volume Group exists"
  community.general.lvg:
    vg: "{{ item.vg }}"
    pvs: "{{ item.pvs | join(',') }}"
    pvresize: true
    state: "present"
  with_items:
    - "{{ lvm_vgs }}"
  loop_control:
    label: "{{ item.vg }}"
  become: True

#Create logical volume(s)
- name: "Ensure Logical Volume exists"
  community.general.lvol:
    vg: "{{ item.vg }}"
    lv: "{{ item.lv }}"
    size: "{{ item.size }}"
    opts: "{{ item.opts | default(omit) }}"
    state: "present"
  with_items: "{{ lvm_lvs }}"
  loop_control:
    label: "{{ item.lv }}"
  become: True

#Create filesystems
- name: "Ensure filesystem exists on Logical Volume"
  community.general.filesystem:
    fstype: "{{ item.fstype }}"
    dev: "/dev/{{ item.vg }}/{{ item.lv }}"
    opts: "{{ item.fsopts | default(omit) }}"
  with_items: "{{ lvm_lvs }}"
  loop_control:
    label: "{{ item.lv }}"
  become: True

#Mount new volumes and ensure they are in /etc/fstab
- name: "Ensure Logical Volume is mounted"
  ansible.posix.mount:
    src: "/dev/{{ item.vg }}/{{ item.lv }}"
    path: "{{ item.mount }}"
    fstype: "{{ item.fstype }}"
    opts: "{{ item.mount_opts }}"
    dump: "{{ item.mount_dump }}"
    passno: "{{ item.mount_passno }}"
    state: "mounted"
  with_items: "{{ lvm_lvs }}"
  loop_control:
    label: "{{ item.lv }}"
  become: True

#Grow filesystems; task repeated due to XFS only supporting resizing when mounted
- name: "Grow the filesystem(s) when necessary"
  community.general.filesystem:
    fstype: "{{ item.fstype }}"
    dev: "/dev/{{ item.vg }}/{{ item.lv }}"
    resizefs: "{{ item.resizefs | default(False) }}"
  with_items: "{{ lvm_lvs }}"
  loop_control:
    label: "{{ item.lv }}"
  become: True

#Set permissions on mount points
- name: "Ensure mount point has desired permissions"
  ansible.builtin.file:
    path: "{{ item.mount }}"
    owner: "{{ item.mount_owner }}"
    group: "{{ item.mount_group }}"
    mode: "{{ item.mount_mode }}"
  with_items: "{{ lvm_lvs }}"
  loop_control:
    label: "{{ item.mount }}"
  become: True
